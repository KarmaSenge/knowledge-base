{"array":{"name":"array","headers":["JSON Schema","Types"],"definition":"A JSON array.","source":"http://json-schema.org/latest/json-schema-core.html#rfc.section.3.5","id":"array"},"boolean":{"name":"boolean","headers":["JSON Schema","Types"],"definition":"A JSON boolean.","source":"http://json-schema.org/latest/json-schema-core.html#rfc.section.3.5","id":"boolean"},"integer":{"name":"integer","headers":["JSON Schema","Types"],"definition":"A JSON number without a fraction or exponent part.","source":"http://json-schema.org/latest/json-schema-core.html#rfc.section.3.5","id":"integer"},"number":{"name":"number","headers":["JSON Schema","Types"],"definition":"Any JSON number. Number includes integer.","source":"http://json-schema.org/latest/json-schema-core.html#rfc.section.3.5","id":"number"},"null":{"name":"null","headers":["JSON Schema","Types"],"definition":"The JSON null value.","source":"http://json-schema.org/latest/json-schema-core.html#rfc.section.3.5","id":"null"},"object":{"name":"object","headers":["JSON Schema","Types"],"definition":"A JSON object.","source":"http://json-schema.org/latest/json-schema-core.html#rfc.section.3.5","id":"object"},"string":{"name":"string","headers":["JSON Schema","Types"],"definition":"A JSON string.","source":"http://json-schema.org/latest/json-schema-core.html#rfc.section.3.5","id":"string"},"schema":{"name":"$schema","headers":["JSON Schema","Keywords"],"definition":"The \"$schema\" keyword is both used as a JSON Schema version identifier and the location of a resource which is itself a JSON Schema, which describes any schema written for this particular version.<br>\nThis keyword MUST be located at the root of a JSON Schema. The value of this keyword MUST be a URI [RFC3986] and a valid JSON Reference [jsonâ€‘reference]; this URI MUST be both absolute and normalized. The resource located at this URI MUST successfully describe itself. It is RECOMMENDED that schema authors include this keyword in their schemas.","example":"http://json-schema.org/schema#","source":"http://json-schema.org/latest/json-schema-core.html#rfc.section.6","id":"schema"},"id":{"name":"id","headers":["JSON Schema","Keywords"],"definition":"The \"id\" keyword (or \"id\", for short) is used to alter the resolution scope. It is a JSON Pointer.","source":"http://json-schema.org/latest/json-schema-core.html#rfc.section.7.2","id":"id"},"ref":{"name":"$ref","headers":["JSON Schema","Keywords"],"definition":"reference to schema using JSON Reference. It can be inline (within the schema) or canonical (resolve all URIs).","source":"http://json-schema.org/latest/json-schema-core.html#rfc.section.7.2.3","id":"ref"},"extends":{"name":"extends","headers":["JSON Schema","Keywords"],"definition":"Specified in draft v3, removed in v4.\nThe value of this property MUST be another schema which will provide\na base schema which the current schema will inherit from.  The\ninheritance rules are such that any instance that is valid according\nto the current schema MUST be valid according to the referenced\nschema.  This MAY also be an array, in which case, the instance MUST\nbe valid for all the schemas in the array.  A schema that extends\nanother schema MAY define additional attributes, constrain existing\nattributes, or add other constraints.\nConceptually, the behavior of extends can be seen as validating an\ninstance against all constraints in the extending schema as well as\nthe extended schema(s).  More optimized implementations that merge\nschemas are possible, but are not required.","source":"http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.26","id":"extends"},"multipleof":{"name":"multipleOf","headers":["JSON Schema","Validation","number and integer"],"definition":"A numeric instance is valid against \"multipleOf\" if the result of the division of the instance by this keyword's value is an integer. The value of \"multipleOf\" MUST be a JSON number. This number MUST be strictly greater than 0.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.1.1","id":"multipleof"},"maximum":{"name":"maximum","headers":["JSON Schema","Validation","number and integer"],"definition":"if \"exclusiveMaximum\" is not present, or has boolean value false, then the instance is valid if it is lower than, or equal to, the value of \"maximum\"; if \"exclusiveMaximum\" has boolean value true, the instance is valid if it is strictly lower than the value of \"maximum\". The value of \"maximum\" MUST be a JSON number.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.1.2","id":"maximum"},"exclusivemaximum":{"name":"exclusiveMaximum","headers":["JSON Schema","Validation","number and integer"],"definition":"If \"exclusiveMaximum\" is present, \"maximum\" MUST also be present. The value of \"exclusiveMaximum\" MUST be a boolean. Default value false.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.1.2","id":"exclusivemaximum"},"minimum":{"name":"minimum","headers":["JSON Schema","Validation","number and integer"],"definition":"if \"exclusiveMinimum\" is not present, or has boolean value false, then the instance is valid if it is greater than, or equal to, the value of \"minimum\"; if \"exclusiveMinimum\" is present and has boolean value true, the instance is valid if it is strictly greater than the value of \"minimum\". The value of \"minimum\" MUST be a JSON number.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.1.3","id":"minimum"},"exclusiveminimum":{"name":"exclusiveMinimum","headers":["JSON Schema","Validation","number and integer"],"definition":"If \"exclusiveMinimum\" is present, \"minimum\" MUST also be present. The value of \"exclusiveMinimum\" MUST be a boolean. Default value false.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.1.3","id":"exclusiveminimum"},"maxlength":{"name":"maxLength","headers":["JSON Schema","Validation","string"],"definition":"A string instance is valid against this keyword if its length is less than, or equal to, the value of this keyword. The value of this keyword MUST be an integer. This integer MUST be greater than, or equal to, 0.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.2.1","id":"maxlength"},"minlength":{"name":"minLength","headers":["JSON Schema","Validation","string"],"definition":"A string instance is valid against this keyword if its length is greater than, or equal to, the value of this keyword. The value of this keyword MUST be an integer. This integer MUST be greater than, or equal to, 0.  Default value value 0.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.2.2","id":"minlength"},"pattern":{"name":"pattern","headers":["JSON Schema","Validation","string"],"definition":"A string instance is considered valid if the regular expression matches the instance successfully. Recall: regular expressions are not implicitly anchored. The value of this keyword MUST be a string. This string SHOULD be a valid regular expression, according to the ECMA 262 regular expression dialect.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.2.3","id":"pattern"},"items":{"name":"items","headers":["JSON Schema","Validation","array"],"definition":"if \"items\" is not present, or its value is an object, validation of the instance always succeeds, regardless of the value of \"additionalItems\"; if the value of \"additionalItems\" is boolean value true or an object, validation of the instance always succeeds; if the value of \"additionalItems\" is boolean value false and the value of \"items\" is an array, the instance is valid if its size is less than, or equal to, the size of \"items\". The value of \"items\" MUST be either an object or an array. If it is an object, this object MUST be a valid JSON Schema. If it is an array, items of this array MUST be objects, and each of these objects MUST be a valid JSON Schema. Default is considered as an empty schema.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.3.1","id":"items"},"additionalitems":{"name":"additionalItems","headers":["JSON Schema","Validation","array"],"definition":"The value of \"additionalItems\" MUST be either a boolean or an object. If it is an object, this object MUST be a valid JSON Schema. Default is considered as an empty schema.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.3.1","id":"additionalitems"},"maxitems":{"name":"maxItems","headers":["JSON Schema","Validation","array"],"definition":"An array instance is valid against \"maxItems\" if its size is less than, or equal to, the value of this keyword. The value of this keyword MUST be an integer. This integer MUST be greater than, or equal to, 0.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.3.2","id":"maxitems"},"minitems":{"name":"minItems","headers":["JSON Schema","Validation","array"],"definition":"An array instance is valid against \"minItems\" if its size is greater than, or equal to, the value of this keyword. The value of this keyword MUST be an integer. This integer MUST be greater than, or equal to, 0. Default value 0.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.3.3","id":"minitems"},"uniqueitems":{"name":"uniqueItems","headers":["JSON Schema","Validation","array"],"definition":"If this keyword has boolean value false, the instance validates successfully. If it has boolean value true, the instance validates successfully if all of its elements are unique. The value of this keyword MUST be a boolean. Default value false.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.3.4","id":"uniqueitems"},"maxproperties":{"name":"maxProperties","headers":["JSON Schema","Validation","object"],"definition":"An object instance is valid against \"maxProperties\" if its number of properties is less than, or equal to, the value of this keyword. The value of this keyword MUST be an integer. This integer MUST be greater than, or equal to, 0.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.1","id":"maxproperties"},"minproperties":{"name":"minProperties","headers":["JSON Schema","Validation","object"],"definition":"An object instance is valid against \"minProperties\" if its number of properties is greater than, or equal to, the value of this keyword. The value of this keyword MUST be an integer. This integer MUST be greater than, or equal to, 0. Default value 0.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.2","id":"minproperties"},"required":{"name":"required","headers":["JSON Schema","Validation","object"],"definition":"An object instance is valid against this keyword if its property set contains all elements in this keyword's array value. The value of this keyword MUST be an array. This array MUST have at least one element. Elements of this array MUST be strings, and MUST be unique.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.3","id":"required"},"properties":{"name":"properties","headers":["JSON Schema","Validation","object"],"definition":"The value of \"properties\" MUST be an object. Each value of this object MUST be an object, and each object MUST be a valid JSON Schema. Default empty object.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.4","id":"properties"},"additionalproperties":{"name":"additionalProperties","headers":["JSON Schema","Validation","object"],"definition":"The value of \"additionalProperties\" MUST be a boolean or an object. If it is an object, it MUST also be a valid JSON Schema. Default empty schema.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.4","id":"additionalproperties"},"patternproperties":{"name":"patternProperties","headers":["JSON Schema","Validation","object"],"definition":"The value of \"patternProperties\" MUST be an object. Each property name of this object SHOULD be a valid regular expression, according to the ECMA 262 regular expression dialect. Each property value of this object MUST be an object, and each object MUST be a valid JSON Schema. Default empty object.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.4","id":"patternproperties"},"dependencies":{"name":"dependencies","headers":["JSON Schema","Validation","object"],"definition":"For all (name, schema) pair of schema dependencies, if the instance has a property by this name, then it must also validate successfully against the schema.\nNote that this is the instance itself which must validate successfully, not the value associated with the property name.\nFor each (name, propertyset) pair of property dependencies, if the instance has a property by this name, then it must also have properties with the same names as propertyset.\nThis keyword's value MUST be an object. Each value of this object MUST be either an object or an array.\nIf the value is an object, it MUST be a valid JSON Schema. This is called a schema dependency.\nIf the value is an array, it MUST have at least one element. Each element MUST be a string, and elements in the array MUST be unique. This is called a property dependency.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.5","id":"dependencies"},"enum":{"name":"enum","headers":["JSON Schema","Validation","Any instance type"],"definition":"An instance validates successfully against this keyword if its value is equal to one of the elements in this keyword's array value.\nThe value of this keyword MUST be an array. This array MUST have at least one element. Elements in the array MUST be unique.\nElements in the array MAY be of any type, including null.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.1","id":"enum"},"type":{"name":"type","headers":["JSON Schema","Validation","Any instance type"],"definition":"An instance matches successfully if its primitive type is one of the types defined by keyword. Recall: \"number\" includes \"integer\".\nThe value of this keyword MUST be either a string or an array. If it is an array, elements of the array MUST be strings and MUST be unique.\nString values MUST be one of the seven primitive types defined by the core specification.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.2","id":"type"},"allof":{"name":"allOf","headers":["JSON Schema","Validation","Any instance type"],"definition":"An instance validates successfully against this keyword if it validates successfully against all schemas defined by this keyword's value.\nThis keyword's value MUST be an array. This array MUST have at least one element.\nElements of the array MUST be objects. Each object MUST be a valid JSON Schema.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.3","id":"allof"},"anyof":{"name":"anyOf","headers":["JSON Schema","Validation","Any instance type"],"definition":"An instance validates successfully against this keyword if it validates successfully against at least one schema defined by this keyword's value.\nThis keyword's value MUST be an array. This array MUST have at least one element.\nElements of the array MUST be objects. Each object MUST be a valid JSON Schema.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.4","id":"anyof"},"oneof":{"name":"oneOf","headers":["JSON Schema","Validation","Any instance type"],"definition":"An instance validates successfully against this keyword if it validates successfully against exactly one schema defined by this keyword's value.\nThis keyword's value MUST be an array. This array MUST have at least one element.\nElements of the array MUST be objects. Each object MUST be a valid JSON Schema.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.5","id":"oneof"},"not":{"name":"not","headers":["JSON Schema","Validation","Any instance type"],"definition":"An instance is valid against this keyword if it fails to validate successfully against the schema defined by this keyword.\nThis keyword's value MUST be an object. This object MUST be a valid JSON Schema.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.6","id":"not"},"definitions":{"name":"definitions","headers":["JSON Schema","Validation","Any instance type"],"definition":"This keyword plays no role in validation per se. Its role is to provide a standardized location for schema authors to inline JSON Schemas into a more general schema. This keyword's value MUST be an object. Each member value of this object MUST be a valid JSON Schema.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.7","id":"definitions"},"title":{"name":"title","headers":["JSON Schema","Validation","Metadata"],"definition":"The value MUST be a string. It MAY be used in root schemas, and in any subschemas.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.6.1","id":"title"},"description":{"name":"description","headers":["JSON Schema","Validation","Metadata"],"definition":"provide explanation about the purpose of the instance described by this schema. The value MUST be a string. It MAY be used in root schemas, and in any subschemas.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.6.1","id":"description"},"default":{"name":"default","headers":["JSON Schema","Validation","Metadata"],"definition":"This keyword can be used to supply a default JSON value associated with a particular schema. It is RECOMMENDED that a default value be valid against the associated schema.\nThis keyword MAY be used in root schemas, and in any subschemas.\nThere are no restrictions placed on the value of this keyword.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.6.2","id":"default"},"format":{"name":"format","headers":["JSON Schema","Validation","Format"],"definition":"Structural validation alone may be insufficient to validate that an instance meets all the requirements of an application. The \"format\" keyword is defined to allow interoperable semantic validation for a fixed subset of values which are accurately described by authoritative resources, be they RFCs or other external specifications.\nThe value of this keyword is called a format attribute. It MUST be a string. A format attribute can generally only validate a given set of instance types. If the type of the instance to validate is not in this set, validation for this format attribute and instance SHOULD succeed.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.7","id":"format"},"date-time":{"name":"date-time","headers":["JSON Schema","Validation","Format","Defined attibutes"],"definition":"A string instance is valid against this attribute if it is a valid date representation as defined by RFC 3339, section 5.6 [RFC3339]. This attribute applies to string instances.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.7.3.1","id":"date-time"},"email":{"name":"email","headers":["JSON Schema","Validation","Format","Defined attibutes"],"definition":"A string instance is valid against this attribute if it is a valid Internet email address as defined by RFC 5322, section 3.4.1 [RFC5322]. This attribute applies to string instances.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.7.3.2","id":"email"},"hostname":{"name":"hostname","headers":["JSON Schema","Validation","Format","Defined attibutes"],"definition":"A string instance is valid against this attribute if it is a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. This attribute applies to string instances.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.7.3.3","id":"hostname"},"ipv4":{"name":"ipv4","headers":["JSON Schema","Validation","Format","Defined attibutes"],"definition":"A string instance is valid against this attribute if it is a valid representation of an IPv4 address according to the \"dotted-quad\" ABNF syntax as defined in RFC 2673, section 3.2 [RFC2673]. This attribute applies to string instances.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.7.3.4","id":"ipv4"},"ipv6":{"name":"ipv6","headers":["JSON Schema","Validation","Format","Defined attibutes"],"definition":"A string instance is valid against this attribute if it is a valid representation of an IPv6 address as defined in RFC 2373, section 2.2 [RFC2373]. This attribute applies to string instances.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.7.3.5","id":"ipv6"},"uri":{"name":"uri","headers":["JSON Schema","Validation","Format","Defined attibutes"],"definition":"A string instance is valid against this attribute if it is a valid URI, according to [RFC3986]. This attribute applies to string instances.","source":"http://json-schema.org/latest/json-schema-validation.html#rfc.section.7.3.6","id":"uri"},"readonly":{"name":"readOnly","headers":["JSON Schema","JSON Hypermedia"],"definition":"If it has a value of boolean true, this keyword indicates that the instance property SHOULD NOT be changed, and attempts by a user agent to modify the value of this property are expected to be rejected by a server.\nThe value of this keyword MUST be a boolean. The default value is false.","source":"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.4.4","id":"readonly"},"pathstart":{"name":"pathStart","headers":["JSON Schema","JSON Hypermedia"],"definition":"this property is a URI that defines what the instance's URI MUST start with in order to validate. The value of the \"pathStart\" property MUST be resolved relative to the closest URI Resolution Scope (as defined in the core specification [FIXME link]), using the rules from RFC 3986, Sec 5 [RFC3986].\nWhen multiple schemas have been referenced for an instance, the user agent can determine if this schema is applicable for a particular instance by determining if the URI of the instance begins with the the value of the \"pathStart\" property. If the URI of the instance does not start with this URI, or if another schema specifies a starting URI that is longer and also matches the instance, this schema SHOULD NOT be considered to describe the instance. Any schema that does not have a pathStart property SHOULD be considered applicable to all the instances for which it is referenced.","source":"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.4.5","id":"pathstart"},"links":{"name":"links","headers":["JSON Schema","JSON Hypermedia","Links"],"definition":"The \"links\" property of schemas is used to associate Link Description Objects with instances. The value of this property MUST be an array, and the items in the array must be Link Description Objects, as defined below.","source":"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.4.1","id":"links"},"href":{"name":"href","headers":["JSON Schema","JSON Hypermedia","Links","Link Description Object (LDO)"],"definition":"The value of the \"href\" link description property is a template used to determine the target URI of the related resource. The value of the instance property SHOULD be resolved as a URI-Reference per RFC 3986 [RFC3986] and MAY be a relative reference to a URI. The base URI to be used for relative URI resolution SHOULD be the URI used to retrieve the instance object (not the schema).\nThe base URI to be used for relative URI resolution SHOULD is defined as follows:\nif the data has a link defined, with a relation of \"self\", then the \"href\" value of that link is used, unless the relation of the link being resolved is also \"self\"\notherwise, the URI should be resolved against the link with relation \"self\" belonging to the closest parent node in the JSON document, if it exists\notherwise, the URI used to fetch the document should be used.\nThis property is not optional.\nUrls are escaped - percent escape, brackets and dollar sign replace","source":"http://json-schema.org/latest/json-schema-hypermedia.html#href","id":"href"},"rel":{"name":"rel","headers":["JSON Schema","JSON Hypermedia","Links","Link Description Object (LDO)"],"definition":"The value of the \"rel\" property indicates the name of the relation to the target resource. This property is not optional.\nThe relation to the target SHOULD be interpreted as specifically from the instance object that the schema (or sub-schema) applies to, not just the top level resource that contains the object within its hierarchy. A link relation from the top level resource to a target MUST be indicated with the schema describing the top level JSON representation.","source":"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.5.2","id":"rel"},"title-2":{"name":"title","headers":["JSON Schema","JSON Hypermedia","Links","Link Description Object (LDO)"],"definition":"This property defines a title for the link. The value must be a string.\nUser agents MAY use this title when presenting the link to the user.","source":"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.5.3","id":"title-2"},"targetschema":{"name":"targetSchema","headers":["JSON Schema","JSON Hypermedia","Links","Link Description Object (LDO)"],"definition":"This property value is advisory only, and is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.","source":"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.5.4","id":"targetschema"},"mediatype":{"name":"mediaType","headers":["JSON Schema","JSON Hypermedia","Links","Link Description Object (LDO)"],"definition":"The value of this property is advisory only, and represents the media type RFC 2046 [RFC2046], that is expected to be returned when fetching this resource. This property value MAY be a media range instead, using the same pattern defined in RFC 2161, section 14.1 - HTTP \"Accept\" header [RFC2616]. If this property's value is not specified, then the value should be taken to be \"application/json\".","source":"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.5.5","id":"mediatype"},"method":{"name":"method","headers":["JSON Schema","JSON Hypermedia","Links","Submission Link Properties"],"definition":"This property defines which method can be used to access the target resource. In an HTTP environment, this might be \"GET\" or \"POST\" (or other HTTP methods).\nSome link relation values imply a set of appropriate HTTP methods to be used for the link. For example, a client might assume that a link with a relation of \"edit\" can be used in conjuction with the \"PUT\" HTTP method. If the client does not know which methods might be appropriate, then this SHOULD default to \"GET\".","source":"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.5.6.1","id":"method"},"enctype":{"name":"encType","headers":["JSON Schema","JSON Hypermedia","Links","Submission Link Properties"],"definition":"f present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource. The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method).","example":"application/x-www-form-urlencoded","source":"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.5.6.2","id":"enctype"},"schema-2":{"name":"schema","headers":["JSON Schema","JSON Hypermedia","Links","Submission Link Properties"],"definition":"This property contains a schema which defines the acceptable structure of the submitted request. For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.\nNote that this is separate from the URI templating of \"href\" (which uses data from the instance, not submitted by the user). It is also separate from the \"targetSchema\" property, which provides a schema for the data that the client should expect to be returned when they follow the link.","source":"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.5.6.3","id":"schema-2"},"media":{"name":"media","headers":["JSON Schema","JSON Hypermedia","Media"],"definition":"The \"media\" property indicates that this instance contains non-JSON data encoded in a JSON string. It describes the type of content and how it is encoded.\nThe value of this property MUST be an object, and SHOULD be ignored for any instance that is not a string.","source":"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.4.3","id":"media"},"binaryencoding":{"name":"binaryEncoding","headers":["JSON Schema","JSON Hypermedia","Media","Properties"],"definition":"If the instance value is a string, this property defines that the string SHOULD be interpreted as binary data and decoded using the encoding named by this property. RFC 2045, Sec 6.1 [RFC2045] lists the possible values for this property.","example":"base64","source":"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.4.3.1.1","id":"binaryencoding"},"type-2":{"name":"type","headers":["JSON Schema","JSON Hypermedia","Media","Properties"],"definition":"The value of this property must be a media type, as defined by RFC 2046 [RFC2046]. This property defines the media type of instances which this schema defines.\nIf the \"binaryEncoding\" property is not set, but the instance value is a string, then the value of this property SHOULD specify a text document type, and the character set SHOULD be the character set into which the JSON string value was decoded (for which the default is Unicode).","example":"image/png","source":"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.4.3.1.2","id":"type-2"}}